// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String          @id @default(uuid())
  age              Int
  name             String
  email            String          @unique
  role             Role            @default(BASIC)
  writtenPosts     Post[]          @relation("WrittenPosts")
  favoritePosts    Post[]          @relation("FavouritePosts")
  userPreference   UserPreference? @relation(fields: [userPreferenceId], references: [id])
  userPreferenceId String?         @unique

  @@unique([age, name])
  @@index([email])
}

model UserPreference {
  id          String  @id @default(uuid())
  emailUpdate Boolean
  user        User?
}

model Post {
  id           String     @id @default(uuid())
  rating       Float
  created_at   DateTime   @default(now())
  updated_at   DateTime   @updatedAt
  author       User       @relation("WrittenPosts", fields: [authorID], references: [id])
  authorID     String
  favoritedBy  User?      @relation("FavouritePosts", fields: [favoriteById], references: [id])
  favoriteById String?
  categories   Category[]
}

model Category {
  id    String @id @default(uuid())
  posts Post[]
}

enum Role {
  BASIC
  ADMIN
}
